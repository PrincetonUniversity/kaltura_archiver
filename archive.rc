#!/bin/bash -e
cd `dirname $0`

# this script relieson the following environment variables
# -) N_YEARS number of years after last played date that we keep videos in KMC
# -) DOIT - indicates whether to run actions in DRYRUN mode or for 'real'
#    prod - set to true
#    test - don't set or set to something other than true
#
#  in test mode  s3copy and video replacement is performed in dryrun mode only

if [ -z ${DOIT+x} ]; then DOIT="false"; fi
if [ $DOIT = "true" ]
then
  max_entries=-1
  do_replace='--replace'
  do_s3copy='--s3copy'
else
  max_entries=1
  do_replace=''
  do_s3copy=''
fi


log=INFO

echo "# ----------------------------------------------------------------------------------------"
echo "# backup videos not yet archived that are unplayed within last $N_YEARS years"
echo "# ----------------------------------------------------------------------------------------"
echo "# COUNT videos that are unplayed within last $N_YEARS years without archived_to_s3 tag"
python src/kaltura_aws.py count  --unplayed_for $N_YEARS --tag \!archived_to_s3
python src/kaltura_aws.py count  --created_before  $N_YEARS --tag \!archived_to_s3
echo ""
echo "# COPY_TO_S3 videos that are unplayed within last $N_YEARS years without archived_to_s3 tag"
python src/kaltura_aws.py --loglevel $log s3copy --unplayed_for $N_YEARS --tag \!archived_to_s3  --max_entries $max_entries $do_s3copy
echo ""

#
echo "# replace backed-up  videos unplayed within last $N_YEARS years"
python src/kaltura_aws.py --loglevel $log replace_video --unplayed_for $N_YEARS --tag archived_to_s3  --max_entries $max_entries $do_replace
echo ""

echo "# ---------------------------------------------------------"
echo "# counts of videos that should but have not yet been archived and replaced"
echo "# ---------------------------------------------------------"
python src/kaltura_aws.py count  --unplayed_for $N_YEARS --tag \!archived_to_s3
python src/kaltura_aws.py count --unplayed_for $N_YEARS --tag \!flavors_deleted
echo ""

