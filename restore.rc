#!/bin/bash 
cd `dirname $0`
# env vars  
#. nogit/bash.rc 
max=25

tag=restore-pending
log=INFO
log_dir=$(date +log/%Y/%m/%d)
mkdir -p $log_dir
tsv=$(date +$log_dir/$tag-%H:%M:%S)
# ----------------------------------------------------------------------------------------
# restore videos played or created within last 3 years -
# the latter should not ever be the case but we might as well cleanup if errors occur
#
echo "restore deleted videos PLAYED within 3 YEARS"
cmd="python src/kaltura_aws.py --loglevel $log restore_from_s3 --tag flavors_deleted --played_within 3 --max_entries $max"
echo $cmd 
$cmd 

echo "restore deleted videos CREATED within 3 YEARS"
cmd="python src/kaltura_aws.py --loglevel $log restore_from_s3  --tag flavors_deleted --created_within 3 --max_entries $max"
echo $cmd 
$cmd 
echo ""

# ---------------------------------------------------------
# print counts of videos that should but have not yet been restored 
#
# should print a count near zero  - we may be waiting for videos to come out of glacier
# should print a count of 0
echo "#videos DELETED and PLAYED within 3 years"
python src/kaltura_aws.py count --tag flavors_deleted --played_within 3
echo "#videos DELETED and CREATED within 3 years"
python src/kaltura_aws.py  count --tag flavors_deleted --created_within 3
echo ""


# ----------------------------------------------------------------------------------------
# generate  health  report of entries that still need to be restored
python src/kaltura_aws.py  health --tag flavors_deleted --played_within 3 > $tsv
python src/kaltura_aws.py  health --tag flavors_deleted --created_within 3 >> $tsv
# combine and clean up 
echo "#Entries created or played within last 3 years that have a flavors-deleted tag" >> $tsv.tsv
fgrep entry_id  $tsv | head -n 1 >> $tsv.tsv
sort -u $tsv >> $tsv.tsv

# ----------------------------------------------------------------------------------------
# copy report to s3
aws s3 cp $tsv.tsv  s3://$AWS_BUCKET/$tsv.tsv
